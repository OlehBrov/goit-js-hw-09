{"mappings":"gfAAAA,EAAA,SAEAC,KAAO,CACLC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,WAGpC,IAAME,EAAW,GACbC,EAAiB,EACjBC,EAAY,KACZC,EAAa,KA4CjB,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,QAAQC,IAAI,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,OAExDG,QAAMC,IAAI,sBAAuCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,CA/C7DX,KAAKC,KAAKgB,iBAAiB,SAG3B,SAAmBC,GAClBb,EAASa,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MACnCP,QAAQC,IAAIV,EAASM,M,IAJtBX,KAAKI,UAAUa,iBAAiB,SAUhC,SAAkBC,GAChBA,EAAEI,iBAKJf,EAAYgB,YAAY,WAetBd,EAAcH,EAAgBD,EAASmB,MACvClB,GAAkB,EAClBmB,aAAalB,E,GAfVF,EAASM,OAEVN,EAASqB,SAAWpB,GACtBqB,cAAcnB,GAGdA,EAAaoB,aAAY,W,GAEtBvB,EAASmB,K,IAnBdV,QAAQC,IAAIV,GACZS,QAAQC,IAAIV,EAASM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nrefs = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('button')\n}\n\nconst userData = {};\nlet promiseCounter = 1;\nlet timeOutId = null;\nlet intervalId = null;\n\nrefs.form.addEventListener('input', storeData);\nrefs.submitBtn.addEventListener('click', onSubmit)\n\nfunction storeData(e){\n userData[e.target.name] = e.target.value;\n console.log(userData.delay)\n\n}\nconsole.log(userData)\nconsole.log(userData.delay)\n\nfunction onSubmit(e){\n  e.preventDefault();\n  // if(userData.amount < promiseCounter) {\n  //   return;\n  // }\n\ntimeOutId = setTimeout (() => {\n  delayedPromise()\n  }, userData.delay);\n\nif (userData.amount === promiseCounter){\n  clearInterval(intervalId)\n};\n\n  intervalId = setInterval(() => {\n    intervalPromise\n  }, userData.step); \n \n}\n\nfunction delayedPromise(){\n  createPromise(promiseCounter, userData.step);\n  promiseCounter += 1;\n  clearTimeout(timeOutId)\n}\n\nfunction intervalPromise(){\n  createPromise(promiseCounter, userData.step);\n  promiseCounter += 1;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`); \n  } else {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["parcelRequire","refs","form","document","querySelector","submitBtn","$ce04d3a99e08e73b$var$userData","$ce04d3a99e08e73b$var$promiseCounter","$ce04d3a99e08e73b$var$timeOutId","$ce04d3a99e08e73b$var$intervalId","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","console","log","concat","addEventListener","e","target","name","value","preventDefault","setTimeout","step","clearTimeout","amount","clearInterval","setInterval"],"version":3,"file":"03-promises.ac0471f1.js.map"}