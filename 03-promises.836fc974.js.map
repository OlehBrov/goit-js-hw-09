{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CAACC,SAAU,SAGhC,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,UAEzC,IAAIE,EAAW,CACbC,OAAQ,EACRC,MAAO,EACPC,KAAM,GAGJC,EAAa,KACbC,EAAe,EAEfC,EAAO,EACPC,EAAkB,EAClBC,EAAc,EAElBZ,EAAKa,iBAAiB,SAGtB,SAAuBC,GACrBV,EAASU,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,K,IAHrCd,EAAUU,iBAAiB,SAM3B,SAAuBC,GACrBA,EAAEI,iBACFC,YAAW,KACqB,IAA3BC,OAAOhB,EAASE,SACjBG,EAAeW,OAAOhB,EAASE,QAGjCI,EAAOU,OAAOhB,EAASG,MAS3B,SAAuBc,EAAUf,GAC/B,IAAIgB,EAAY,EACT,IAAIC,SAAQ,CAACC,EAASC,KAE3BjB,EAAakB,aAAY,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtClB,GAAkB,EAClBC,EAAcN,EACdG,EAAgC,IAAjBA,EAAqBH,EAAQG,EACzCkB,EACCH,EAAS5B,EAAAF,GAASG,OAAOiC,QAAQ,uBAAqBnB,QAAwBF,EAAcG,EAAcU,QAExGG,EAAK7B,EAAAF,GAASG,OAAOkC,QAAQ,sBAAoBpB,QAAsBF,EAAcG,EAAcU,QAEpGX,IAAoBS,OAAOhB,EAASC,SAAWM,IAAoBU,GACpEW,cAAcxB,GAEdc,GAAa,CAAC,GAEhBhB,EAAM,G,CA3BX2B,CAvBY,EAuBYvB,EAAK,GAE3BN,EAASE,MAAQF,EAASG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({fontSize: '18px',});\n\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\n\nlet userData = {\n  amount: 0,\n  delay: 0,\n  step: 0,\n};\nlet position = 0;\nlet intervalId = null;\nlet promiseDelay = 0;\n\nlet step = 0;\nlet promisePosition = 0;\nlet promiseStep = 0;\n\nform.addEventListener('input', userInputSave);\nsubmitBtn.addEventListener('click', buildPromises)\n\nfunction userInputSave(e){\n  userData[e.target.name] = e.target.value;\n}\n\nfunction buildPromises(e){\n  e.preventDefault();\n  setTimeout(() => {\n    if(Number(userData.delay) !== 0){\n      promiseDelay = Number(userData.delay)\n\n    }\n    step = Number(userData.step);\n   createPromise(position, step);\n    \n  }, userData.delay - userData.step)\n\n\n}\n\n\nfunction createPromise(position, delay){\n  let increment = 0;\n  return new Promise((resolve, reject) => {\n   \n    intervalId = setInterval(() => {\n      const shouldResolve = Math.random() > 0.3;\n      promisePosition +=1;\n      promiseStep = delay;\n      promiseDelay = promiseDelay === 0 ? delay : promiseDelay;\n      if(shouldResolve){\n          resolve (Notiflix.Notify.success(`✅ Fulfilled promise ${promisePosition} in ${promiseDelay + promiseStep*increment}ms`));\n        } else {\n          reject(Notiflix.Notify.warning(`❌ Rejected promise ${promisePosition} in ${promiseDelay + promiseStep*increment}ms`));\n        }\n        if(promisePosition === Number(userData.amount) || promisePosition === position){\n          clearInterval(intervalId)}\n          \n          increment += 1;\n\n      },delay)\n    })    \n\n}\n\n  \n\n  // createPromise(4, 3000).then(\n  // result => {(result)}, \n  // error => {(error)})"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","fontSize","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$userData","amount","delay","step","$47d4ff9957288465$var$intervalId","$47d4ff9957288465$var$promiseDelay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$promisePosition","$47d4ff9957288465$var$promiseStep","addEventListener","e","target","name","value","preventDefault","setTimeout","Number","position1","increment","Promise","resolve","reject","setInterval","shouldResolve","Math","random","success","warning","clearInterval","$47d4ff9957288465$var$createPromise"],"version":3,"file":"03-promises.836fc974.js.map"}