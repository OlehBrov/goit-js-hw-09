{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CAACC,SAAU,SAGhC,IAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,UAErCE,EAAW,CACbC,OAAQ,EACRC,MAAO,EACPC,KAAM,GAGJC,EAAa,KACbC,EAAe,EACfC,EAAQ,EAERC,EAAkB,EAClBC,EAAc,EACdC,EAAY,EACZC,EAAc,CAChBC,SATa,EAUbT,MAAAI,GA0CF,SAASM,EAAcD,EAAUT,GAE7B,OAAO,IAAIW,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCX,GAAkB,EAClBC,EAAcW,OAAOnB,EAASG,MAE3Ba,EACCF,EAASJ,EAAYC,SAAWJ,EAAiBG,EAAYR,MAAQG,EAAeG,EAAYC,GAEhGM,EAAQL,EAAYC,SAAWJ,EAAiBG,EAAYR,MAAQG,EAAeG,EAAYC,GAEjGA,GAAa,EAEXF,IAAoBY,OAAOnB,EAASC,SAEpCmB,cAAchB,E,IAxDxBR,EAAKyB,iBAAiB,SAGtB,SAAuBC,GACrBtB,EAASsB,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,K,IAHrC1B,EAAUsB,iBAAiB,SAM3B,SAAuBC,GACrBA,EAAEI,iBAGFC,YAAW,WAETtB,EAAec,OAAOnB,EAASE,OAEhCU,EA3BY,EA0BXN,EAAQa,OAAOnB,EAASG,OACMyB,MAAK,SAACd,GACpCtB,EAAAF,GAASG,OAAOoC,QAAQ,uBAAoDC,OAA3BpB,EAAYC,SAAS,QAAwBmB,OAAlBpB,EAAYR,MAAM,M,IAE/F,SAACa,GACAvB,EAAAF,GAASG,OAAOsC,QAAQ,sBAAmDD,OAA3BpB,EAAYC,SAAS,QAAwBmB,OAAlBpB,EAAYR,MAAM,M,IAI/FE,EAAa4B,aAAY,WACnBpB,EApCO,EAoCiBN,GAAOsB,MAAK,SAACd,GACnCtB,EAAAF,GAASG,OAAOoC,QAAQ,uBAAoDC,OAA3BpB,EAAYC,SAAS,QAAwBmB,OAAlBpB,EAAYR,MAAM,M,IAE/F,SAACa,GACAvB,EAAAF,GAASG,OAAOsC,QAAQ,sBAAiDD,OAA3BpB,EAAYC,SAAS,QAAwBmB,OAAlBpB,EAAYR,MAAM,M,MAI7FiB,OAAOnB,EAASG,M,GAGpBgB,OAAOnB,EAASE,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({fontSize: '18px',});\n\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\n\nlet userData = {\n  amount: 0,\n  delay: 0,\n  step: 0,\n};\nlet position = 0;\nlet intervalId = null;\nlet promiseDelay = 0;\nlet delay = 0;\n\nlet promisePosition = 0;\nlet promiseStep = 0;\nlet increment = 0;\nlet promiseData = {\n  position,\n  delay,\n}\nform.addEventListener('input', userInputSave);\nsubmitBtn.addEventListener('click', buildPromises)\n\nfunction userInputSave(e){\n  userData[e.target.name] = e.target.value;\n}\n\nfunction buildPromises(e){\n  e.preventDefault();\n  \n  \n  setTimeout(() => {\n    // delaying first promise\n    promiseDelay = Number(userData.delay)\n    delay = Number(userData.step);\n   createPromise(position, delay).then((resolve) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${promiseData.position} in ${promiseData.delay}ms`)\n   },\n   (reject) => {\n    Notiflix.Notify.warning(`❌ Rejected promise ${promiseData.position} in ${promiseData.delay}ms`)\n   });\n    \n // delaying rest of promiises\n  intervalId = setInterval(() =>{\n        createPromise(position, delay).then((resolve) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${promiseData.position} in ${promiseData.delay}ms`)\n         },\n         (reject) => {\n          Notiflix.Notify.warning(`❌ Rejected promise ${promiseData.position} in ${promiseData.delay}ms`)\n         });}, \n\n\n        Number(userData.step));\n\n\n }, Number(userData.delay))\n\n}\n\n\nfunction createPromise(position, delay){\n  \n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      promisePosition +=1;\n      promiseStep = Number(userData.step);\n\n      if(shouldResolve){\n          resolve (promiseData.position = promisePosition, promiseData.delay = promiseDelay + promiseStep*increment);\n        } else {\n          reject (promiseData.position = promisePosition, promiseData.delay = promiseDelay + promiseStep*increment);\n        }\n        increment += 1;\n        if(\n          promisePosition === Number(userData.amount) \n          ){\n          clearInterval(intervalId)}\n\n\n    })    \n\n}\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","fontSize","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$userData","amount","delay","step","$ce04d3a99e08e73b$var$intervalId","$ce04d3a99e08e73b$var$promiseDelay","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$promisePosition","$ce04d3a99e08e73b$var$promiseStep","$ce04d3a99e08e73b$var$increment","$ce04d3a99e08e73b$var$promiseData","position","$ce04d3a99e08e73b$var$createPromise","Promise","resolve","reject","shouldResolve","Math","random","Number","clearInterval","addEventListener","e","target","name","value","preventDefault","setTimeout","then","success","concat","warning","setInterval"],"version":3,"file":"03-promises.dc3685ff.js.map"}