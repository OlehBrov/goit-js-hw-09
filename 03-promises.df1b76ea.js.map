{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CAACC,SAAU,SAGhC,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,UAEzC,IAAIE,EAAW,CACbC,MAAO,GAELC,EAAkB,EAClBC,EAAa,KACHH,EAASC,MACvB,IAAIG,EAAYC,OAAOL,EAASC,OAqBhC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBR,EAAaS,aAAY,KACzBV,GAAkB,EAClBE,GAAaC,OAAOG,GAEEK,KAAKC,SAAW,GAElCJ,EAASlB,EAAAF,GAASG,OAAOsB,QAAQ,uBAAqBb,QAAwBE,QAE5EO,EAAKnB,EAAAF,GAASG,OAAOuB,QAAQ,sBAAoBd,QAAsBE,QAIxEF,IAAoBG,OAAOL,EAASiB,SAAWZ,OAAOE,KAAcL,GACrEgB,cAAcf,EAAW,GAC3BK,EAAM,G,CAjChBZ,EAAKuB,iBAAiB,SAGtB,SAAuBC,GACrBpB,EAASoB,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,K,IAHrCxB,EAAUoB,iBAAiB,SAM3B,SAAuBC,GACrBA,EAAEI,iBACFC,YAAW,KAETnB,EAAcN,EAASiB,OAAQjB,EAAS0B,KAAK,GAE5C1B,EAASC,M,IAyBZK,EAAc,EAAG,MAAMqB,MACvBC,IAAWpC,EAAAF,GAASG,OAAOsB,QAAQa,EAAO,IAC1CC,IAAUrC,EAAAF,GAASG,OAAOuB,QAAQa,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({fontSize: '18px',});\n\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\n\nlet userData = {\n  delay: 0,\n};\nlet positionCounter = 0;\nlet intervalId = null;\nconst delay = userData.delay;\nlet delayTime = Number(userData.delay);\n\n\n\nform.addEventListener('input', userInputSave);\nsubmitBtn.addEventListener('click', buildPromises)\n\nfunction userInputSave(e){\n  userData[e.target.name] = e.target.value;\n}\n\nfunction buildPromises(e){\n  e.preventDefault();\n  setTimeout(() => {\n\n    createPromise(userData.amount, userData.step);\n    \n  }, userData.delay)\n}\n\n\nfunction createPromise(position, delay){\n  return new Promise((resolve, reject) => {\n        intervalId = setInterval(() => {\n        positionCounter +=1;\n        delayTime += Number(delay);\n\n        const shouldResolve = Math.random() > 0.3;\n          if(shouldResolve){\n            resolve (Notiflix.Notify.success(`✅ Fulfilled promise ${positionCounter} in ${delayTime}ms`));\n          } else {\n            reject(Notiflix.Notify.warning(`❌ Rejected promise ${positionCounter} in ${delayTime}ms`));\n          }\n          \n          \n          if(positionCounter === Number(userData.amount) || Number(position) === positionCounter){\n            clearInterval(intervalId)}\n        },delay)\n    })    \n  }\n  \n\n  createPromise(4, 2500).then(\n  result => {Notiflix.Notify.success(result)}, \n  error => {Notiflix.Notify.warning(error)})"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","fontSize","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$userData","delay","$47d4ff9957288465$var$positionCounter","$47d4ff9957288465$var$intervalId","$47d4ff9957288465$var$delayTime","Number","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","setInterval","Math","random","success","warning","amount","clearInterval","addEventListener","e","target","name","value","preventDefault","setTimeout","step","then","result","error"],"version":3,"file":"03-promises.df1b76ea.js.map"}